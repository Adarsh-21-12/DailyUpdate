class Student: 
    def __init__ (self, Name, marks):
        self.name = Name
        self.marks = marks
    
    def get_avg(self):
        sum = 0
        for val in self.marks:
            sum += val
        print (self.name, sum/3)



student1 = Student("Adarsh", [33, 45, 50])
print(student1.name)
student1.get_avg()


class Account:
    def __init__(self, balance, account_no):
        self.balance = balance
        self.account_no = account_no 
    
    def debit(self, amount):
        self.balance -= amount
        print(amount, "Money debited")

    def credit(self, amount):
        self.balance += amount
        print(amount, "Money Credited")

    def show_balance (self):
        print(self.balance)


c1 = Account(200, 1)
c1.debit(20)
c1.show_balance()
c1.credit(304)
c1.show_balance()



try:
    n = int(input("Enter an integer: "))
    print("Number entered", n)

except ValueError:
    print("Invalid input")


try:
    a = float(input("enter 1st number "))
    b = float(input("Enter 2nd number"))

    result = a/b
    print(result)

except ZeroDivisionError:
    print("Division by zero is not allowed")
except ValueError:
    print(" enter numeric values")




n = int(input().strip())

if n % 2 != 0:
    print("Weird")
elif n % 2 == 0 and 1 < n < 6 :
    print("Not Weird")
elif n % 2 == 0 and 5 < n < 21 :
    print("Weird")
elif n % 2 == 0 and n > 21:
    print("Not Weird")



import socket

s = socket.socket()
print("Socket created")

s.bind(('localhost', 9999))

s.listen(3)
print("Waiting")

while True:
    c, addr = s.accept()
    name = c.recv(1024).decode()
    print("Client connected", addr)
    
    c.send(bytes("Welcome here", 'utf-8'))

    c.close()



import socket

c = socket.socket()

c.connect(('localhost', 9999))

name = input("Enter Name ")
c.send(bytes(name, 'utf-8'))


print(c.recv(1024).decode())


#pandas

import pandas as pd

data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
    'Age': [25, 30, 35, 40, 28],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix'],
    'Salary': [50000, 60000, 70000, 80000, 55000]
}

df = pd.DataFrame(data)

print(df.head(3))

#new example done on google colab

import pandas as pd

#file downloaded from kaggle

ds = pd.read_csv('/indian_food.csv') 


ds.head(10)

#gives overview
ds.info()

#describes 
ds.describe()

few_columns = ds[['prep_time', 'name', 'course']]
print(few_columns)

print(ds.isnull().sum())

#null value
null_value = ds[ds['region'].isnull()]
print(null_value[['name','diet','course','state','region']])

#sorting
#axis 0 means row 1 means column
sorted = ds.sort_values(by ='Severity of Anxiety Attack (1-10)', axis= 0, ascending=True)
print(sorted[['Age', 'Gender', 'Sleep Hours', 'Severity of Anxiety Attack (1-10)', 'Diet Quality (1-10)' ]].head(10))

#drops the null value
ds.dropna()

#how parameter
ds.dropna(how='any') #any/all

#subset
ds.dropna(subset=['Sleep Hours']) #drops all the null value present in SLeep hour column

#thresh parameter
ds.dropna(thresh=2) #the row/column should have 2 or more non null value to survive 

#sorting
ds.isnull().sum().sort_values(ascending=False) #total null value table sorted from column having most null value to least 

#filling the nullvalue data by calculating the mean
ds['Sleep Hours'].fillna(ds['Sleep Hours'].mean())

